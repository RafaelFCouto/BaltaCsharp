
using Blog.Models.Domain;
using Blog.Repositories;
using Microsoft.Data.SqlClient;
using Dapper.Contrib.Extensions;

namespace Blog
{
    class Program
    {
        private const string connectionString =
            "Server=localhost;Database=Blog;Integrated Security=SSPI;trusted_connection = true;TrustServerCertificate=true";
        static void Main(string [] args)
        {
            var connection = new SqlConnection(connectionString);
           
            //CreateUsers(connection);
            //ReadUsers(connection);
            //ReadRoles(connection);
            //ReadTags(connection);
            ReadUsersWithRoles(connection);


        }

        
        public static void ReadUsers(SqlConnection connection)
        {
            
 
            var repository = new Repository<User>(connection);
            var items = repository.Get();

            foreach (var item in items)
               Console.WriteLine(item.Name);
  
        }
        public static void CreateUsers(SqlConnection connection)
        {

            var user = new User()
            {
                Email = "gabriel@email.com",
                Bio = "Engenheiro Elétrico",
                Image = "Imagem",
                Name = "Gabriel Freire",
                PasswordHash = "hase",
                Slug = "gabriel-freire"

            };
            var repository = new Repository<User>(connection);
            repository.Create(user);

            
        }
        
        public static void ReadRoles(SqlConnection connection)
        {
            
 
            var repository = new Repository<Role>(connection);
            var items = repository.GetWithRoles();

            foreach (var item in items)
                Console.WriteLine(item.Name);
            
        }
        public static void ReadTags(SqlConnection connection)
        {
            
 
            var repository = new Repository<Tag>(connection);
            var items = repository.Get();

            foreach (var item in items)
                Console.WriteLine(item.Name);
            
        }

        public static void ReadUsersWithRoles(SqlConnection connection)
        {
            var repository = new UserR(connection);
            var items = repository.Get();

            foreach (var item in items)
            {
                Console.WriteLine(item.Name);
                foreach (var role in item.Roles)
                {
                    Console.WriteLine($" - {role.Name}");
                }
            }
            
        }
        
    

        
        
         
        
        
    }
}